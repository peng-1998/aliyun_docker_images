FROM nvidia/cuda:11.7.0-base-ubuntu22.04
ARG DEBIAN_FRONTEND=noninteractive

# 替换成清华源 如果使用海外机器构建则不用换源
RUN echo "deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse" >/etc/apt/sources.list &&
    echo "deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse" >>/etc/apt/sources.list &&
    echo "deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse" >>/etc/apt/sources.list &&
    echo "deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse" >>/etc/apt/sources.list
# 安装必要软件 以及设置
RUN apt -y update &&
    apt -y install git vim curl python3-pip python3-dev openssh-server zsh unzip libgl1-mesa-glx &&
    ssh-keygen -A &&
    echo "PermitRootLogin yes" >>/etc/ssh/sshd_config &&
    pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
# Install oh-my-zsh
RUN sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" &&
    git clone --recursive https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions &&
    git clone --recursive https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting &&
    sed -i 's/plugins=(git)/plugins=(git zsh-autosuggestions zsh-syntax-highlighting)/g' ~/.zshrc
# Install Python pkg
RUN pip install numpy scipy matplotlib scikit-learn scikit-image opencv-python jupyter tqdm &&
    pip install torch torchvision
# Install Code-Server
RUN sh -c "curl -fsSL https://code-server.dev/install.sh" &&
    sed -i 's/127.0.0.1/0.0.0.0/g' ~/.config/code-server/config.yaml &&
    sed -i '3c password: scnu' ~/.config/code-server/config.yaml
# 设置 jupyter notebook password 使用自己的校验码,这里使用的校验码是"scnu"的校验码,注意加\转义
RUN jupyter notebook --generate-config &&
    echo "c.NotebookApp.ip='*'" >>~/.jupyter/jupyter_notebook_config.py &&
    echo "c.NotebookApp.password = 'argon2:\$argon2id\$v=19\$m=10240,t=10,p=8\$xvz0mi9pHX3lpKLqGdRBvA\$Y8xqw2CEvwzORmkM9+bHOFgWHT/TmRewsfd4F7yqmJU'" >>~/.jupyter/jupyter_notebook_config.py && echo "c.NotebookApp.port = 8888" >>~/.jupyter/jupyter_notebook_config.py &&
    echo "c.NotebookApp.allow_remote_access = True" >>~/.jupyter/jupyter_notebook_config.py
# 如果不开启jupyter notebook 也要替换成bash指令,否则执行完service ssh start容器就退出了
# echo "root:scnu" | chpasswd 设置root的密码为scnu
RUN echo "service ssh start" >/start.sh &&
    echo "code-server &" >>/start.sh &&
    echo "jupyter notebook" >>/start.sh &&
    echo "root:scnu" | chpasswd
# 最后一个执行的指令应该是阻塞的,否则容器会退出,不是最后一个的阻塞指令应该加上&后台执行,service ssh start是非阻塞的,因此如果只有这一个指令,需要加上一个阻塞指令,如while true ; do sleep 10000 ; done
WORKDIR /root/

CMD sh /start.sh
